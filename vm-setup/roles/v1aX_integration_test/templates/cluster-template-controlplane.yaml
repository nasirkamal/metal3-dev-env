kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
metadata:
  name: ${ CLUSTER_NAME }
  namespace: ${ NAMESPACE }
spec:
  replicas: ${ CONTROL_PLANE_MACHINE_COUNT }
  version: ${ KUBERNETES_VERSION }
  infrastructureTemplate:
    kind: Metal3MachineTemplate
{% if CAPM3_VERSION == "v1alpha3" %}
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
{% else %}
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
{% endif %}
    name: ${ CLUSTER_NAME }-controlplane
  kubeadmConfigSpec:
    clusterConfiguration: {}
    joinConfiguration:
      controlPlane: {}
      nodeRegistration:
        name: "{{ '{{ ds.meta_data.name }}' }}"
        kubeletExtraArgs:
          node-labels: "metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}"
          provider-id: "metal3://{{ '{{ ds.meta_data.uuid }}' }}"
    initConfiguration:
      nodeRegistration:
        name: "{{ '{{ ds.meta_data.name }}' }}"
        kubeletExtraArgs:
          node-labels: "metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}"
          provider-id: "metal3://{{ '{{ ds.meta_data.uuid }}' }}"
${ CTLPLANE_KUBEADM_EXTRA_CONFIG }
---
{% if CAPM3_VERSION == "v1alpha3" %}
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
{% else %}
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
{% endif %}
kind: Metal3MachineTemplate
metadata:
  name: ${ CLUSTER_NAME }-controlplane
  namespace: ${ NAMESPACE }
spec:
  template:
    spec:
      image:
        url: ${ IMAGE_URL }
        checksum: ${ IMAGE_CHECKSUM }
        checksumType: ${ IMAGE_CHECKSUM_TYPE }
        format: ${ IMAGE_FORMAT }
{% if CAPM3_VERSION != "v1alpha3" and IMAGE_OS != "Centos" %}
      dataTemplate:
        name: ${ CLUSTER_NAME }-controlplane-template
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
kind: Metal3DataTemplate
metadata:
  name: ${ CLUSTER_NAME }-controlplane-template
spec:
  clusterName: ${ CLUSTER_NAME }
  metaData:
    objectNames:
      - key: name
        object: machine
      - key: local-hostname
        object: machine
      - key: local_hostname
        object: machine
    ipAddressesFromIPPool:
      - key: provisioningIP
        name: provisioning-pool
    prefixesFromIPPool:
      - key: provisioningCIDR
        name: provisioning-pool
  networkData:
    links:
      ethernets:
        - type: phy
          id: enp1s0
          macAddress:
            fromHostInterface: enp1s0
        - type: phy
          id: enp2s0
          macAddress:
            fromHostInterface: enp2s0
    networks:
{% if IP_STACK == 'v4' or IP_STACK == 'v4v6' %}
      ipv4:
        - id: baremetalv4
          link: enp2s0
          ipAddressFromIPPool: baremetalv4-pool
          routes:
            - network: 0.0.0.0
              prefix: 0
              gateway:
                fromIPPool: baremetalv4-pool
{% endif %}
{% if IP_STACK == 'v6' or IP_STACK == 'v4v6'%}
      ipv6:
        - id: baremetalv6
          link: enp2s0
          ipAddressFromIPPool: baremetalv6-pool
          routes:
            - network: 0::0
              prefix: 0
              gateway:
                fromIPPool: baremetalv6-pool
{% endif %}
    services:
      dns:
{% if IP_STACK == 'v4' or IP_STACK == 'v4v6' %}
        - 8.8.8.8
{% endif %}
{% if IP_STACK == 'v6' or IP_STACK == 'v4v6' %}
        - 2001:4860:4860::8888
{% endif %}
{% endif %}
